class Solution:
    def lengthOfLongestSubstring(self, s: str) -> int:
        sub_s = ''
        i = 0
        maxlength = 0
        while i < len(s):
            if i+1 >= len(s) or (i+2) > len(s):
                break
            else:
                if s[i] != s[i+1]:
                    sub_s = s[i:i+2]
                    print('first sub '+sub_s)
                    j = i+2
                    while j < len(s):
                        if s[j] not in sub_s:
                            sub_s += s[j]
                            j += 1
                        else:
                            break
                    print('substring = '+sub_s)
                    maxlength = max(maxlength, len(sub_s))
                    i += 1
                else:
                    sub_s = s[i:i+1]
                    maxlength = max(maxlength, len(sub_s))
                    i += 1

        return maxlength
sub = Solution()
p = sub.lengthOfLongestSubstring("abcabcbb")
p1 = sub.lengthOfLongestSubstring("dvdf")
p2 = sub.lengthOfLongestSubstring("  ")
print(p)
print(p1)



